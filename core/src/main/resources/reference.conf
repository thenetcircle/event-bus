task {
  builders = {
    source = [
      ["http", "com.thenetcircle.event_bus.tasks.http.HttpSourceBuilder"],
      ["kafka", "com.thenetcircle.event_bus.tasks.kafka.KafkaSourceBuilder"]
    ],
    transform = [
      ["tnc-topic-resolver", "com.thenetcircle.event_bus.tasks.misc.TNCKafkaTopicResolverBuilder"]
    ],
    sink = [
      ["http", "com.thenetcircle.event_bus.tasks.http.HttpSinkBuilder"],
      ["kafka", "com.thenetcircle.event_bus.tasks.kafka.KafkaSinkBuilder"]
    ],
    fallback = [
      ["cassandra", "com.thenetcircle.event_bus.tasks.cassandra.CassandraFallbackBuilder"]
    ]
  }

  http-source {
    interface = "0.0.0.0"
    port = 8000
    format = ActivityStreams
    succeeded-response = ok

    # server settings will override the default settings of akka.http.server
    server {
      max-connections = 1024
      request-timeout = 10 s
      idle-timeout = 60 s
      bind-timeout = 1 s
      linger-timeout = 1 min
      # ...
    }
  }

  http-sink {
    request {
      method = POST
      # uri = "http =//www.google.com"
    }
    expected-response = ok
    min-backoff = 1 s
    max-backoff = 30 s
    random-factor = 0.2
    max-retrytime = 12 h
    concurrent-retries = 1

    # pool settings will override the default settings of akka.http.host-connection-pool
    pool {
      max-connections = 4
      min-connections = 0
      max-retries = 1
      max-open-requests = 32
      pipelining-limit = 1
      idle-timeout = 30 s
      # ...
    }
  }

  kafka-source {
    # bootstrap-servers = ""
    # group-id = ""

    # Will use either "topics" or "topic-pattern"
    # topics = []
    # topic-pattern = event-* # supports wildcard if topics are defined will use that one 
  
    max-concurrent-partitions = 100
  
    # If offset commit requests are not completed within this timeout
    # the returned Future is completed `TimeoutException`.
    commit-timeout = 15s

    # Fully qualified config path which holds the dispatcher configuration
    # to be used by the KafkaConsumerActor. Some blocking may occur.
    use-dispatcher = "akka.kafka.default-dispatcher"
  
    # Properties defined by org.apache.kafka.clients.consumer.ConsumerConfig
    # can be defined in this configuration section.
    properties {
      # Disable auto-commit by default
      "enable.auto.commit" = false
    }
  }

  kafka-sink {
    # bootstrap-servers = ""
    default-topic = event-default
    use-event-group-as-topic = true

    # Tuning parameter of how many sends that can run in parallel.
    parallelism = 100

    # How long to wait for `KafkaProducer.close`
    close-timeout = 60 s

    # Fully qualified config path which holds the dispatcher configuration
    # to be used by the producer stages. Some blocking may occur.
    # When this value is empty the dispatcher configured for the stream
    # will be used.
    use-dispatcher = "akka.kafka.default-dispatcher"

    # Properties defined by org.apache.kafka.clients.producer.ProducerConfig
    # can be defined in this configuration section.
    properties {
    }
  }

  tnc-topic-resolver {
    default-topic = "event-default"
    use-cache = false
  }

  cassandra-fallback {
    contact-points = []
    port = 9042
    parallelism = 3
  }
}