event-bus {
  pipeline.pool = [
    {
      name = TestPipeline
      type = kafka
      akka.kafka.producer {
        use-dispatcher = "akka.kafka.default-dispatcher"
        kafka-clients {
          client.id = "EventBus.TestPipeline"
          bootstrap.servers = "maggie-kafka-1:9093,maggie-kafka-2:9093,maggie-kafka-3:9093"
        }
      }
      akka.kafka.consumer {
        use-dispatcher = "akka.kafka.default-dispatcher"
        kafka-clients {
          bootstrap.servers = "maggie-kafka-1:9093,maggie-kafka-2:9093,maggie-kafka-3:9093"
        }
      }
    }
  ]

  test-transporter = {
    name = TestTransporter
    entrypoints = [
      {
        type = http
        name = TestEntryPoint1
        interface = localhost
        port = 8080
      }
    ]
    pipeline {
      name = TestPipeline
      inlet-settings {}
    }
    transport-parallelism = 1
    commit-parallelism = 10
    akka.stream.materializer {}
  }

  test-dispatcher = {
    name = TestDispatcher
    #max-parallel-sources = 1
    endpoint {
      type = http
      name = TestEndPoint
      request{
        host = localhost
        port = 8081
      }
      akka.http.host-connection-pool {
        max-open-requests = 32
      }
    }
    pipeline {
      name = TestPipeline
      outlet-settings {
        group-id = EventBus.TestDispatcher
        topics = ["default"]
      }
    }
  }
}